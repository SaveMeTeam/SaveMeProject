@model SaveMeProject.Models.ReportAbuser

@{
    ViewBag.Title = "Create";
}

@* Google map api *@
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRa9eyYslzo7LNWf7OhxUVY0hAcrw4Qts" type="text/javascript"></script>

<h2>Create</h2>

@*//Top of form//*@
<h2>Report Animal Cruelty</h2>





@* This contains both the map code and the lat and long code for the project *@
<script type="text/javascript" language="JavaScript">
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (p) {
            var LatLng = new google.maps.LatLng(p.coords.latitude, p.coords.longitude);
            var mapOptions = {
                center: LatLng,
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP

            };

            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            var marker = new google.maps.Marker({
                position: LatLng,
                map: map,
                title: "<div style = 'height:60px;width:200px'><b>Your location:</b><br />Latitude: " + p.coords.latitude + "<br />Longitude: " + p.coords.longitude
            });
            google.maps.event.addListener(marker, "click", function (e) {
                var infoWindow = new google.maps.InfoWindow();
                infoWindow.setContent(marker.title);
                infoWindow.open(map, marker);
            });



        });
    } else {
        alert('Geo Location feature is not supported in this browser.');
    }
    function SetTextBoxValue() {
        // document.getElementById('txtDes').value =
        navigator.geolocation.getCurrentPosition(function (point) {
            var LatLng = new google.maps.LatLng(point.coords.latitude, point.coords.longitude);
            var Lat = point.coords.latitude
            var Lng = point.coords.longitude
            document.getElementById('txtLat').value = Lat.toFixed(4)
            document.getElementById('txtLng').value = Lng.toFixed(4)
            document.getElementById("txtCon").innerHTML = "Location Recorded!"
        });
    }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <!--Dropdown starts here-->

        <div class="form-group">
            @*Topic Header*@
            <h3><strong>Choose a Topic</strong></h3>
            @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Topic, new List<SelectListItem>
               {
               new SelectListItem { Text = "Select", Value = "Select" },
                    new SelectListItem { Text = "Cruelty/Neglect", Value = "Cruelty/Neglect" },
                    new SelectListItem { Text = "Other Complaint", Value = "Other Complaint" },
               }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("MM/dd/yyyy hh:mm tt") } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*Check all that Apply abuse checkbox area*@
            <h3><strong>Check All That Apply</strong></h3>
            @Html.LabelFor(model => model.Food, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Food)
                    @Html.ValidationMessageFor(model => model.Food, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shelter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Shelter)
                    @Html.ValidationMessageFor(model => model.Shelter, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abandoned, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Abandoned)
                    @Html.ValidationMessageFor(model => model.Abandoned, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poisoned, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Poisoned)
                    @Html.ValidationMessageFor(model => model.Poisoned, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Underweight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Underweight)
                    @Html.ValidationMessageFor(model => model.Underweight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Trapping, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Trapping)
                    @Html.ValidationMessageFor(model => model.Trapping, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Water, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Water)
                    @Html.ValidationMessageFor(model => model.Water, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Shot)
                    @Html.ValidationMessageFor(model => model.Shot, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Injury, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Injury)
                    @Html.ValidationMessageFor(model => model.Injury, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abuse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Abuse)
                    @Html.ValidationMessageFor(model => model.Abuse, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control", @placeholder = "Explain" } })
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>
        @*End of abuse checkbox area ^^*@
        <div class="form-group">
            @Html.LabelFor(model => model.AbuseDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbuseDetails, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex. 2 Dogs, 3 Cats." } })
                @Html.ValidationMessageFor(model => model.AbuseDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <button type="button" class="btn btn-primary" onclick="Javascript:SetTextBoxValue()">
                Record the Location
            </button>

            <div id="map_canvas" style="height: 200px; width: 300px;"></div>

            <label id="txtCon"></label>
        </div>


        <div class="form-group">
            @*Text boxes for Abuser and Property Description*@
            <h3><strong>Abuser and Property Description</strong></h3>
            <h4><strong>Include street address if known</strong></h4>
            @Html.LabelFor(model => model.PropertyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PropertyDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "Provide additional details here." } })
                @Html.ValidationMessageFor(model => model.PropertyDescription, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AbuserDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbuserDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "Physical attributes, age, etc." } })
                @Html.ValidationMessageFor(model => model.AbuserDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OwnerName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name (Last Name)" } })
                @Html.ValidationMessageFor(model => model.OwnerName, "", new { @class = "text-danger" })
            </div>
        </div>


    
                @*end of Text boxes for Abuser and Property Description ^^*@

                <div class="form-group">
                    @*Contact Information section*@
                    <h3><strong>Contact Information</strong></h3>
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name, Last Name" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                    </div>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReportEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReportEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "example@address.com" } })
                            @Html.ValidationMessageFor(model => model.ReportEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group" >*@
                    <!--Phone format-->


                    <div class="form-group">
                        @Html.LabelFor(model => model.ReportPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReportPhone, new { htmlAttributes = new { @class = "form-control", id = "phone", placeholder = "(XXX) XXX XXXX" } })
                            @Html.ValidationMessageFor(model => model.ReportPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!--End format-->

                    <div class="form-group">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Contact)
                                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updates, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Updates)
                                @Html.ValidationMessageFor(model => model.Updates, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    @* This is the added parts for google maps and getting the lat and long *@
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        
                            @Html.TextBoxFor(model => model.Latitude, new { id = "txtLat", style = "display: none; " })
                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                        
                    </div>


                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })*@
                       
                            @Html.TextBoxFor(model => model.Longitude, new { id = "txtLng", style = "display: none; " })
                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                        
                    </div>
                   @*end of Contact Information section ^^*@
        
                    <div class="form-group">
                        @*Submit button*@
                        <div class="col-md-offset-2 col-md-10">
                            @*JS button confirmation message*@
                            <input type="submit" value="Submit Report" class="btn btn-primary btn-lg" id="alertconfirm" />
                        </div>
                    </div>
</div>
                    @* end Submit button*@


<<<<<<< HEAD
        <div class="form-group">
            @*Submit button*@
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Report" class="btn btn-primary btn-lg" />

            </div>
        </div>
    </div>
    @* end Submit button*@
=======
       
    
>>>>>>> a5cecf0a5bca93de69aba30a324ebb435da33414
}


                    <div>
                        @Html.ActionLink("Back to Home", "Index", "Home", new { @class = " btn btn-primary", role = "button" })
                    </div>


@section Scripts {
    <script src="~/Scripts/jquery.maskedinput.js"></script>
    <script src="~/Scripts/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/PhoneFormat.js"></script>
    <script src="~/Scripts/Site.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
